# Shared editor configuration <https://editorconfig.org>

# This is the top-most EditorConfig file which should apply to files below
root = true

[*]
charset = utf-8
# https://github.com/pharring/EditorGuidelines#editorconfig-support-vs-2017-and-vs-2019-only
guidelines = 80, 100, 120
insert_final_newline = true
trim_trailing_whitespace = true

## Configure Roslyn Analyzers
## https://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers#set-rule-severity-in-an-editorconfig-file

# Enable all diagnostics at warning level by default
dotnet_analyzer_diagnostic.severity = warning

# Note: dotnet_analyzer_diagnostic.severity should not apply to compiler
# diagnostics (e.g. IDE*) but does in Visual Studio 16.5 due to
# https://github.com/dotnet/roslyn/issues/42116 so several default levels are
# configured below to revert the change resulting from this issue.
#
# Note: Compiler diagnostics (e.g. IDE*) are not analyzed during build and will
# not cause build failures until Microsoft.CodeAnalysis.CSharp.CodeStyle is
# ready.  See https://github.com/dotnet/roslyn/issues/33558

# Suggest "Avoid excessive class coupling"
# Broken https://github.com/dotnet/roslyn-analyzers/issues/2133
dotnet_diagnostic.CA1506.severity = suggestion
# Suggest "Avoid Dead Conditional Code"
# Broken https://github.com/dotnet/roslyn-analyzers/issues/2180
dotnet_diagnostic.CA1508.severity = suggestion
# Suggest "Prefer jagged arrays over multidimensional"
# Multidimensional should use less memory (lack of indirection), rows are
# contiguous in memory, and squareness is enforced.  Performance can vary.
# https://stackoverflow.com/q/597720 (See .NET Core answers downthread)
# Which is preferable depends on tradeoffs of specific use cases.
dotnet_diagnostic.CA1814.severity = suggestion
# Suggest "Dispose objects before losing scope"
# Broken https://github.com/dotnet/roslyn-analyzers/issues/2949
# https://github.com/dotnet/roslyn-analyzers/issues/2936
dotnet_diagnostic.CA2000.severity = suggestion
# Suggest "Assemblies should have valid strong names"
# The value of strong names is dubious.  See:
# https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/strong-name-signing.md
# https://github.com/angularsen/UnitsNet/issues/135
dotnet_diagnostic.CA2210.severity = suggestion
# Ignore "Use explicit type instead of 'var'"
dotnet_diagnostic.IDE0008.severity = silent
# Ignore "Use block body for methods"
dotnet_diagnostic.IDE0022.severity = silent
# Ignore "'if' statement can be simplified"
dotnet_diagnostic.IDE0045.severity = silent
# Ignore "'if' statement can be simplified"
dotnet_diagnostic.IDE0046.severity = silent
# Suggest "Convert to tuple"
dotnet_diagnostic.IDE0050.severity = suggestion
# Suggest "Populate switch"
dotnet_diagnostic.IDE0072.severity = suggestion
# Suggest "Expression value is never used"
# Note: I want to use this, but fluent interfaces (StringBuilder, OptionSet)
# make it too painful.  Need something more like MustUseReturnValue.
# https://www.jetbrains.com/help/resharper/Reference__Code_Annotation_Attributes.html#MustUseReturnValueAttribute
dotnet_diagnostic.IDE0058.severity = suggestion
# Disable "Using directives must be placed outside of a namespace declaration"
dotnet_diagnostic.IDE0065.severity = none
# Suggest "Inline local variable."
# Often a local variable makes the code more easily readable/understandable.
dotnet_diagnostic.RCS1124.severity = suggestion
dotnet_diagnostic.RCS1124FadeOut.severity = silent
# Disable "Add 'param' element to documentation comment."
# Redundant with CS1573
dotnet_diagnostic.RCS1141.severity = none
# Disable "Unconstrained type parameter checked for null."
# Logic which applies to null often does not apply to non-null default.
dotnet_diagnostic.RCS1165.severity = none
# Disable "Format initializer with single expression on single line"
# Minimize diff for adding/removing by keeping each value on its own line.
dotnet_diagnostic.RCS1183.severity = none
# Suggest "Join string expressions."
# Often strings are split for line length or logic-related reasons.
dotnet_diagnostic.RCS1190.severity = suggestion
# Ignore "Use regular string literal instead of verbatim string literal"
# Using verbatim strings consistently (e.g. alignment, regex contexts) is good.
dotnet_diagnostic.RCS1192.severity = silent
# Disable "Implement exception constructors."
# Redundant with CA1032
dotnet_diagnostic.RCS1194.severity = none
# Ignore "Avoid nested ?: operators."
# If the cases are simple and well-formatted, nesting can be preferable
dotnet_diagnostic.RCS1238.severity = silent
# Disable "Remove the unused private method '{0}'."
# Redundant with RCS1213, which doesn't gray+underline the entire method
dotnet_diagnostic.S1144.severity = none
# Disable "Extract this nested ternary operation into an independent statement."
dotnet_diagnostic.S3358.severity = none
# Disable "Exception types should be \"public\""
# Redundant with CA1064
dotnet_diagnostic.S3871.severity = none
# Suggest "Field names should not use Hungarian notation"
# Too many false-positives
dotnet_diagnostic.SA1305.severity = suggestion
# Disable "Store files as UTF-8 with byte order mark"
# Prefer UTF-8 without BOM
dotnet_diagnostic.SA1412.severity = none
# Ignore "File header should have summary"
# Purpose of file is usually self-evident (and documented by class doc)
dotnet_diagnostic.SA1639.severity = silent
# Ignore "Property documentation should have value"
# Documenting property value is usually redundant
dotnet_diagnostic.SA1609.severity = silent
# Disable "Do not prefix local calls with 'this.'"
dotnet_diagnostic.SX1101.severity = none
# Disable "Field names should begin with underscore"
# Don't want to use underscore for field names
dotnet_diagnostic.SX1309.severity = none
# Disable "Field names should begin with underscore" for static fields
# Don't want to use underscore for static field names
dotnet_diagnostic.SX1309S.severity = none

## Diagnostics which are too noisy during initial development, but useful later
# FIXME: CA1573/1591 duplicated with <NoWarn> in .csproj for old VS
# Suggest "Do not pass literals as localized parameters"
dotnet_diagnostic.CA1303.severity = suggestion
# Suggest "Parameter has no matching param tag in the XML comment"
dotnet_diagnostic.CS1573.severity = suggestion
# Suggest "Missing XML comment for publicly visible type or member"
dotnet_diagnostic.CS1591.severity = suggestion
# Suggest "Take the required action to fix the issue indicated by this 'FIXME' comment."
dotnet_diagnostic.S1134.severity = suggestion
# Suggest "Complete the task associated to this 'TODO' comment."
dotnet_diagnostic.S1135.severity = suggestion
# Suggest "Elements must be documented"
dotnet_diagnostic.SA1600.severity = suggestion
# Suggest "Partial elements must be documented"
dotnet_diagnostic.SA1601.severity = suggestion

[*.{cs,ps1}]
indent_size = 4
indent_style = space

[*.{cshtml,css,html,js,json,jsx,scss,ts,tsx,yaml,yml}]
indent_size = 2
indent_style = space
